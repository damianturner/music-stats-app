let database,admin;_48c‍.x([["default",()=>_48c‍.o]]);_48c‍.w("firebase-functions",[["database",["database"],function(v){database=v}]]);_48c‍.w("firebase-admin",[["default",["admin"],function(v){admin=v}]]);


_48c‍.d(database
  .ref('/role_grants/{roleUid}/{grantUid}')
  .onWrite((eventSnapshot, context) => {
    const roleUid = context.params.roleUid
    const grantUid = context.params.grantUid

    const userRolesRef = admin.database().ref(`user_roles`)

    return userRolesRef.once('value').then(snapshot => {
      let promises = []

      snapshot.forEach(userRoles => {
        const userUid = userRoles.key
        const roles = userRoles.val()

        Object.keys(roles).forEach((key, index) => {
          if (key === roleUid) {
            let grantRef = false

            _48c‍.g.console.log('User role changed:', eventSnapshot.val())

            if (eventSnapshot.val()) {
              grantRef = admin
                .database()
                .ref(`user_grants/${userUid}/${grantUid}`)
                .set(true)
            } else {
              grantRef = admin
                .database()
                .ref(`user_grants/${userUid}/${grantUid}`)
                .remove()
            }

            promises.push(grantRef)

            _48c‍.g.console.log('Role changed', userUid, roleUid, grantUid)
          }
        })
      })

      return Promise.all(promises)
    })
  }));
